version: '3.8'
services:
  frontend:
    build:
      context: .
      dockerfile: docker/frontend.dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:4000
    networks:
      - bridge_network

  backend:
    build:
      context: .
      dockerfile: docker/backend.dockerfile
    ports:
      - "4000:4000"
    depends_on:
      database:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://user:password@database:5432/mydb
    networks:
      - bridge_network

  database:
    build:
      context: .
      dockerfile: docker/database.dockerfile
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydb"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bridge_network

  ai-nft-generator:
    build:
      context: .
      dockerfile: docker/ai-nft-generator.dockerfile
    ports:
      - "5001:5000"
    depends_on:
      - backend
    networks:
      - bridge_network

  solana-validator:
    image: solanalabs/solana:stable
    command: solana-test-validator --reset
    ports:
      - "8899:8899"
      - "9900:9900"
    networks:
      - bridge_network

  ethereum-node:
    build:
      context: .
      dockerfile: docker/ethereum.dockerfile
    ports:
      - "8545:8545"
    environment:
      - ACCOUNT_BALANCE=100000000000000000000
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8545"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - bridge_network

networks:
  bridge_network:
    name: bridge_network
    driver: bridge

volumes:
  postgres_data:
